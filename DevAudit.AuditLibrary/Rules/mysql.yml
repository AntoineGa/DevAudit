---
mysql:
    -   id: 1
        title: mysqld runs as the root user
        category: Execution with Unnecessary Privileges
        tags: 
            -   CWE/250/Execution with Unnecessary Privileges   
            -   OWASP-Top10-2013/A5/Security Misconfiguration
        severity: 2
        xpathtest: not(boolean(/MySQL/mysqld/user)) or boolean(/MySQL/mysqld/user='root')
        summary: |
           mysqld can (and should) be run as an ordinary, unprivileged user instead. 
           You can create a separate Unix account named mysql to make everything even more secure. Use this account only for administering MySQL.           
        resolution: |
            Create an ordinary, unnprivileged user account called mysql (or a name of your choice.)
            Add a user=mysql key value to the [mysqld] section of your configuration file.
        urls:
            -   https://dev.mysql.com/doc/refman/5.7/en/security-against-attack.html

    -   id: 2
        title:  mysqld accepts TCP/IP connections on all IPv6 and IPv4 interfaces
        category: Execution with Unnecessary Privileges
        tags: 
            -   CWE/250/Execution with Unnecessary Privileges   
            -   OWASP-Top10-2013/A5/Security Misconfiguration
        severity: 2
        xpathtest: not(boolean(/MySQL/mysqld/bind-address))
        summary: |
           By default the MySQL server listens on all available addresses and network interfaces. 
           It is more secure to bind the mysql network socket to a single address.		    
           Note that this socket is bound to a single address, but it is possible for an address to map onto multiple network interfaces. 
           
        resolution: |
            Add a directive like the following to the [mysqld] section of your MySQL configuration file: bind-address=127.0.0.1
            which binds MySQL to listen only on the local loopback address.
        urls:
            -   https://www.digitalocean.com/community/tutorials/how-to-secure-mysql-and-mariadb-databases-in-a-linux-vps

    -   id: 3
        title:  Loading files from the filesystem for users without file level privileges to the database is enabled
        tags: 
            -   CWE/250/Execution with Unnecessary Privileges   
            -   OWASP-Top-10-2013/A5/Security Misconfiguration
        severity: 2
        xpathtest: not(boolean(/MySQL/mysqld/local-infile)) or boolean(/MySQL/mysqld/local-infile=1) 
        summary: |
           In certain cases, the “LOCAL INFILE” MySQL command can be used by database users to gain access to other files on the operating system, for instance “/etc/passwd”. 
           This a known MySQL security hole and should always be plugged by disabling loading files from the filesystem for users without file level privileges to the database.
        resolution: |
            Add the following directive to the [mysqld] section of your MySQL configuration file: local-infile=0
        urls:
            -   https://www.digitalocean.com/community/tutorials/how-to-secure-mysql-and-mariadb-databases-in-a-linux-vps

    -   id: 4
        title:  The SHOW DATABASES command is enabled
        tags: 
            -   CWE/250/Execution with Unnecessary Privileges   
            -   OWASP-Top10-2013/A5/Security Misconfiguration
        severity: 2
        xpathtest: not(boolean(/MySQL/mysqld/skip-show-database='1'))
        summary: |
           The “SHOW DATABASES” MySQL command can be used by potential attackers to gather information about all your databases. 
           Unless it is needed by your application this command should be disabled. 
        resolution: |
            Add the following directive to the [mysqld] section of your MySQL configuration file: skip-show-database=1
        urls:
            -   http://www.hexatier.com/mysql-database-security-best-practices-2/

    -  id: 5
       title:  MySQL does not limit the directories where table data can be exported.
       xpathtest: not(boolean(/MySQL/mysqld/secure_file_priv)) or boolean(/MySQL/mysqld/secure_file_priv='')
       summary: |
           MySQL can export data using the OUTFILE keyword e.g SELECT * FROM  mysql.db INTO OUTFILE("foo")
           You should always restrict the directories where these export files can be created to avoid sensitive information disclosure
           to potential hackers. 
       resolution: |
            Add a directive like the following to the [mysqld] section of your MySQL configuration file: secure_file_priv=/tmp
            And ensure that this directory has the appropriate security permissions set.
       urls:
            -   http://stackoverflow.com/questions/33691094/mysql-exporting-into-outfile-secure-file-priv-error-when-using-set-directory

    -  id: 6
       title:  MySQL error logging is not enabled
       xpathtest: not(boolean(/MySQL/mysqld/log_error))
       summary: |
           MySQL can log information about startup and shutdown and critical errors that occur during runtime. These logs can alert you to potential attacks or malicious behaviour by users or apps.
           You should always enable error logging so that this information can be stored for generating alerts and later analysis.
       resolution: |
            Add a directive like the following to the [mysqld] section of your MySQL configuration file: 
            log_error = localhost_error.log`
       urls:
            -   http://www.fromdual.com/mysql-configuration-file-sample
            -   https://dev.mysql.com/doc/refman/5.7/en/error-log.html

    -  id: 7
       title:  MyISAM is the default storage engine
       xpathtest: boolean(/MySQL/mysqld/default-storage-engine='MyISAM')
       summary: |
           The MYISAM storage engine does not provide transacational integrity for your data. InnoDB is the default storage engine for current versions of MySQL
       resolution: |
            Add the following directive to the [mysqld] section of your MySQL configuration file: 
            default-storage-engine=InnoDB
       urls:
            -   https://www.doag.org/formes/pubfiles/7535404/docs/Konferenz/2015/vortraege/MySQL/2015-K-MySQL-Carsten_Thalheimer-MySQL_Enterprise_-_Haerten_von_MySQL-Instanzen-Praesentation.pdf

    -  id: 8
       title:  Symbolic links are not disabled
       xpathtest: not(boolean(/MySQL/mysqld/symbolic-links='0'))
       summary: |
           Symbolic links for mysqld data files and locations should be disabled to prevent redirection into a less secure filesystem.
       resolution: |
            Add the following directive to the [mysqld] section of your MySQL configuration file 
            symbolic-links=0
       urls:
            -   https://www.doag.org/formes/pubfiles/7535404/docs/Konferenz/2015/vortraege/MySQL/2015-K-MySQL-Carsten_Thalheimer-MySQL_Enterprise_-_Haerten_von_MySQL-Instanzen-Praesentation.pdf

    -  id: 9
       title:  Users with blank passwords exist
       xpathtest: boolean(db:query("SELECT User,Host FROM mysql.user WHERE Password=''")//row)
       summary: |
           Users with blank passwords exist in the MySQL user table.
       resolution: |
            Assign passwords to every user that exists in the mysql.user table or remove unused user accounts.
            e.g ALTER USER 'myuser' SET PASSWORD=.... 
       urls:
            -   https://www.doag.org/formes/pubfiles/7535404/docs/Konferenz/2015/vortraege/MySQL/2015-K-MySQL-Carsten_Thalheimer-MySQL_Enterprise_-_Haerten_von_MySQL-Instanzen-Praesentation.pdf

    -  id: 10
       title:  Users with blank authentication_string exist
       xpathtest: boolean(db:query("SELECT User,Host FROM mysql.user WHERE authentication_string=''")//row)
       summary: |
           Users with blank authentication_strings exist in the MySQL user table.
       resolution: |
            Assign passwords to every user that exists in the mysql.user table or remove unused user accounts.
            e.g ALTER USER 'myuser' SET PASSWORD=.... 
       urls:
            -   https://www.doag.org/formes/pubfiles/7535404/docs/Konferenz/2015/vortraege/MySQL/2015-K-MySQL-Carsten_Thalheimer-MySQL_Enterprise_-_Haerten_von_MySQL-Instanzen-Praesentation.pdf